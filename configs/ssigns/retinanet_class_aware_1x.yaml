MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  META_ARCHITECTURE: "RetinaNet"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    IN_FEATURES: ["p3", "p4", "p5", "p6", "p7"]
    NUM_CLASSES: 27

DATASETS:
  TRAIN: ("ssigns_train_class_aware_150",)
  TEST: ("ssigns_val_class_aware_150",)
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (30000, 40000)
  MAX_ITER: 50000
INPUT:
  MIN_SIZE_TRAIN: (640,)
  MAX_SIZE_TEST: 1600
  MIN_SIZE_TEST: 800
  MAX_SIZE_TRAIN: 640
  CROP:
    ENABLED: True
    TYPE: "absolute"
    SIZE: [640, 640]
OUTPUT_DIR: "output/surface_signs/retinanet_class_aware_1"
